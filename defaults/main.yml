---
# Git URL and version to use, version must be a Git tag
# Use the latest release
# Alternatively, set a specific version
# See available releases: https://github.com/peering-manager/peering-manager/releases/
# peering_manager_version: 'v1.7.4'
peering_manager_version: latest
peering_manager_git_url: https://github.com/peering-manager/peering-manager.git

# Where to install Peering Manager
peering_manager_install_directory: /opt/peering-manager
peering_manager_virtualenv_path: "{{ peering_manager_install_directory }}/venv"

# Python local requirements
peering_manager_local_requirements: []

# Which user/group should own the files
peering_manager_user: peering-manager
peering_manager_group: peering-manager

# Mostly used for the first setup, superuser password still need to be set
peering_manager_superuser_username: admin
peering_manager_superuser_password: admin
peering_manager_superuser_email: admin@example.com

# LDAP authentication
peering_manager_setup_ldap_auth: false
# LDAP configuration, can be used like
# peering_manager_ldap_config: |
#   This is my configuration on multiple lines.
#   That is pretty simple to do, but maybe painful?
# Example for LDAP configuration can be found at the following URL:
# https://peering-manager.readthedocs.io/en/latest/setup/ldap/
peering_manager_ldap_config: ""

# Systemd unit variables (not configured by default)
peering_manager_setup_systemd: false
peering_manager_gunicorn_address: 127.0.0.1
peering_manager_gunicorn_port: 8001
peering_manager_gunicorn_workers_number: "{{ ansible_processor_vcpus + 1 }}"

# Web frontend variables (not configured by default)
peering_manager_setup_web_frontend: false

# Database related variables (password must be changed)
peering_manager_database: peering-manager
peering_manager_database_user: peering-manager
peering_manager_database_password: peering-manager
peering_manager_database_host: localhost

# Configuration
peering_manager_config:
  ALLOWED_HOSTS:
    - localhost
    - 127.0.0.1

# Task to run regularly
peering_manager_tasks:
  peeringdb-sync:
    enabled: true
    command: "{{ peering_manager_virtualenv_path }}/bin/python {{ peering_manager_install_directory }}/manage.py peeringdb_sync"
    on_calendar: "*-*-* 2:30:00"
  prefix-fetch:
    enabled: true
    command: "{{ peering_manager_virtualenv_path }}/bin/python {{ peering_manager_install_directory }}/manage.py grab_prefixes"
    on_calendar: "*-*-* 4:30:00"
  poll-bgp-sessions:
    enabled: true
    command: "{{ peering_manager_virtualenv_path }}/bin/python {{ peering_manager_install_directory }}/manage.py poll_bgp_sessions --all"
    on_unit_active_sec: "30m"
  configure-routers:
    enabled: true
    command: "{{ peering_manager_virtualenv_path }}/bin/python {{ peering_manager_install_directory }}/manage.py configure_routers"
    on_calendar: "*-*-* *:55:00"
  data-sources:
    enabled: true
    command: "{{ peering_manager_virtualenv_path }}/bin/python {{ peering_manager_install_directory }}/manage.py datasource --all"
    on_calendar: "30m"
