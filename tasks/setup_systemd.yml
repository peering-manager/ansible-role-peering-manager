---
- name: install gunicorn
  ansible.builtin.pip:
    name: gunicorn
    extra_args: "--upgrade"
    virtualenv: "{{ peering_manager_virtualenv_path }}"
    virtualenv_command: "{{ peering_manager_python_binary }} -m venv"
  become: true
  become_user: "{{ peering_manager_user }}"
  register: pip_result
  until: pip_result is success

- name: configure gunicorn
  ansible.builtin.template:
    src: gunicorn.py.j2
    dest: "{{ peering_manager_install_directory }}/gunicorn.py"
    owner: "{{ peering_manager_user }}"
    group: "{{ peering_manager_group }}"
    mode: 0644
  become: true
  notify:
    - restart peering-manager

- name: configure systemd service
  ansible.builtin.template:
    src: peering-manager.service.j2
    dest: "{{ peering_manager_systemd_directory }}/peering-manager.service"
    owner: root
    group: root
    mode: 0644
  become: true
  notify:
    - reload systemd
    - restart peering-manager

- name: configure rqworker systemd service
  ansible.builtin.template:
    src: peering-manager-rqworker.service.j2
    dest: "{{ peering_manager_systemd_directory }}/peering-manager-rqworker.service"
    owner: root
    group: root
    mode: 0644
  become: true
  notify:
    - reload systemd
    - restart peering-manager
    - restart peering-manager rqworker
